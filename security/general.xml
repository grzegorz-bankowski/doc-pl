<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 96c9d88bad9a7d7d44bfb7f26c226df7ee9ddf26 Maintainer: sobak Status: ready -->
<!-- splitted from ./index.xml, last change in rev 1.66 -->
  <chapter xml:id="security.general" xmlns="http://docbook.org/ns/docbook">
   <title>Uwagi ogólne</title>
   <simpara>
    Stworzenie w pełni bezpiecznego systemu jest zasadniczo niemożliwe, więc
    często stosowanym podejściem w dziedzinie bezpieczeństwa jest balansowanie
    między ryzykiem a użytecznością. Jeżeli każda zmienna wysyłana przez użytkownika
    wymagałaby dwóch sposobów weryfikacji biometrycznej (jak np. skan siatkówki oraz
    odcisk palca), osiągnęlibyśmy bardzo wysoki poziom
    bezpieczeństwa. Oznaczałoby to też, że wypełnienie średnio
    skomplikowanego formularza zajmowałoby 30 minut, a to z kolei powodowałoby, że
    użytkownicy szukaliby sposobu na obejście wymogów bezpieczeństwa.
   </simpara>
   <simpara>
    Najlepsze zabezpieczenia są często wystarczająco nieprzeszkadzające aby
    spełniły wymagania bez powstrzymywania użytkowników od wykonania
    ich zadań oraz bez zmuszania twórcy kodu do przesadnej
    złożoności. W rzeczywistości niektóre z ataków wykorzystują właśnie
    te przesadnie rozbudowane zabezpieczenia, która często z czasem zaczynają się rozpadać.
   </simpara>
   <simpara>
    Stwierdzeniem wartym zapamiętania jest: system jest tak bezpieczny
    jak jego najsłabszy element. Jeżeli wszystkie transakcje są dokładnie logowane
    w oparciu o czas, lokalizację, typ transakcji itd., ale użytkownik jest
    weryfikowany tylko w oparciu o pojedyncze ciasteczko, to poprawność przypisywania
    użytkowników do logu transakcji jest bardzo wątpliwa.
   </simpara>
   <simpara>
    Podczas testowania pamiętaj, że nie będziesz w stanie przetestować wszystkich
    możliwości nawet dla najprostszych stron. Dane wejściowe,
    których się spodziewasz, mogą być kompletnie inne niż te
    podane przez zniechęconego pracownika, hackera przygotowującego się
    miesiącami lub kota, który przeszedł po klawiaturze. Dlatego
    najlepiej patrzeć na kod z logicznego punktu widzenia, aby określić
    gdzie mogą się pojawić nieoczekiwane dane, a potem ustalić
    jak zmienić lub wzmocnić to miejsce.
   </simpara>
   <simpara>
    Internet jest pełen ludzi, którzy próbują wyrobić sobie markę łamiąc
    Twoje zabezpieczenia, psując Twoją stronę, publikując nieodpowiednie
    treści lub w inny sposób sprawiając, że Twój dzień stanie się bardzo interesujący.
    Nie ma znaczenia czy Twoja strona jest duża czy mała, jesteś
    celem tylko dlatego, że jesteś online, ponieważ masz serwer, do
    którego można się podłączyć. Wiele programów do łamania zabezpieczeń nie patrzy
    na rozmiar witryny, po prostu przeszukują ogromne blok adresów IP w poszukiwaniu ofiar.
    Spróbuj nie stać się jedną z nich.
   </simpara>
  </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
