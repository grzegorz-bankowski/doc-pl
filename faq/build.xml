<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: b8e1b1357def73f310c9f7405035b3acc0cb1eaf Maintainer: sobak Status: wip -->
<!-- TODO: Dokończyć jak komuś będzie się nudzić :) zacząłem tłumaczyć, ale ten plik jest starożytny, nikt z tego nie skorzysta -->
<chapter xml:id="faq.build" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Problemy z kompilacją</title>
  <titleabbrev>Problemy z kompilacją</titleabbrev>

  <para>
   Ta sekcja zbiera najczęstsze błędy, które występują
   w trakcie kompilacji.
  </para>

  <qandaset>
   <qandaentry xml:id="faq.build.configure">
    <question>
     <para>
      Pobrałem najnowszą wersję PHP używając anonimowej usługi Git,
      ale nie widzę skryptu configure!
     </para>
    </question>
    <answer>
     <para>
      Musisz mieć zainstalowaną paczkę GNU autoconf, aby móc
      wygenerować skrypt configure z pliku <filename>configure.in</filename>. Uruchom
      <command>./buildconf</command> w głównym katalogu po pobraniu
      źródeł z serwera Git. Ponadto, o ile nie uruchomisz <command>configure</command>
      z flagą <literal>--enable-maintainer-mode</literal>, skrypt
      configure nie zostanie przebudowany automatycznie kiedy plik
      <filename>configure.in</filename> zostanie zaktualizowany, więc upewnij się, że robisz to
      ręcznie, kiedy zauważysz, że plik <filename>configure.in</filename> się zmienił. Jednym z objawów
      takiej sytuacji jest znajdowanie fragmentów takich jak @VARIABLE@ w pliku Makefile
      po uruchomieniu configure lub <filename>config.status</filename>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.build.configuring">
    <question>
     <para>
      Mam problem w skonfigurowaniu PHP, aby działał z Apache.
      Błąd mówi, że nie można znaleźć <filename>httpd.h</filename>, ale jest tam, gdzie powiedziałem, że jest!
     </para>
    </question>
    <answer>
     <para>
      Musisz podać skryptowi configure/setup lokalizację
      głównego katalogu źródeł Apache. Oznacza to,
      że chcesz podać <option 
      role="configure">--with-apache=/sciezka/do/apache</option>
      a <emphasis>nie</emphasis> <option 
      role="configure">--with-apache=/sciezka/do/apache/src</option>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.build.lex">
    <question>
     <para>
      Podczas konfiguracji PHP (<literal>./configure</literal>) napotkałeś na
      błąd podobny do tego:
     </para>
     <para>
      <screen>
       checking lex output file root... ./configure: lex: command not found
       configure: error: cannot find output from lex; giving up
      </screen>
     </para>
    </question>
    <answer>
     <para>
      Upewnij się, że przeczytałeś instrukcje <link linkend="install.unix">instalacji</link>
      dokładnie i zwróć uwagę, że potrzebujesz mieć zainstalowane zarówno
      paczki flex i bison, aby skompilować PHP. W zależności od Twojego środowiska
      paczki bison i flex zainstalujesz ze źródeł lub z paczek, takich jak RPM.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.build.apache-sharedcore">
    <question>
     <para>
      Kiedy próbuję wystartować Apache, otrzymuję następujący komunikat:
     </para>
     <para>
      <screen>
       fatal: relocation error: file /path/to/libphp4.so:
       symbol ap_block_alarms: referenced symbol not found
      </screen>
     </para>    </question>
    <answer>
     <para>
      Ten błąd zazwyczaj pojawia się gdy główny program Apache
      został skompilowany jako biblioteka DSO do użycia współdzielonego. Spróbuj
      zrekonfigurować Apache, upewnij się, że używasz przynajmniej
      następujących flag:
     </para>
     <para>
      <screen>
      --enable-shared=max --enable-rule=SHARED_CORE
      </screen>
     </para>
     <para>
      Po więcej informacji przeczytaj plik
      <filename>INSTALL</filename> w głównym katalogu źródeł
      Apache lub stronę manuala Apache
      <link xlink:href="&url.apachedso;">poświęconą DSO</link>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.build.not-found">
    <question>
     <para>
      Kiedy uruchamiam configure, komunikat mówi, że nie udało się znaleźć
      plików include lub biblioteki dla GD, gbm lub innej paczki!
     </para>
    </question>
    <answer>
     <para>
      Możesz sprawić, że skrypt configure będzie szukał plików nagłówków i bibliotek
      w niestandardowych lokalizacjach używając dodatkowych flag do przekazania
      do preprocesora C oraz linkera, takich jak:
      <programlisting>
<![CDATA[
    CPPFLAGS=-I/path/to/include LDFLAGS=-L/path/to/library ./configure
]]>
      </programlisting>
      Jeśli używasz powłoki w wariancie csh (po co?), będzie to:
      <programlisting>
<![CDATA[
    env CPPFLAGS=-I/path/to/include LDFLAGS=-L/path/to/library ./configure
]]>
      </programlisting>
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.build.yytname">
    <question>
     <para>
      Podczas kompilacji pliku <filename>language-parser.tab.c</filename> otrzymuję błędy 
      mówiące <literal>yytname undeclared</literal>.
     </para>
    </question>
    <answer>
     <para>
      Musisz zaktualizować Twoją wersję Bisona. Możesz znaleźć najnowszą wersję
      pod adresem <link xlink:href="&url.bison;">&url.bison;</link>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.build.link">
    <question>
     <para>
      Kiedy uruchamiam <command>make</command>, wydaje się, że działa w porządku, ale potem następuje błąd
      podczas próby linkowania finalnej aplikacji, mówiący, że nie udało się znaleźć jakichś plików.
     </para>
    </question>
    <answer>
     <para>
      Niektóre stare wersje make, niepoprawnie umieszczają skompilowane
      wersje plików z katalogu functions w tym samym katalogu.
      Spróbuj uruchomić <command>cp *.o functions</command> a potem
      uruchom <command>make</command> ponownie i zobacz, czy to pomogło. Jeśli tak, to powinieneś
      naprawdę zaktualizować wersję GNU make.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.build.undefined">
    <question>
     <para>
      Podczas linkowania PHP, pojawia się błąd o niezdefiniowanych referencjach.
     </para>
    </question>
    <answer>
     <para>
      Spójrz na linię linkowania i upewnij się, że wszystkie potrzebne
      biblioteki zostały dołączone na jej końcu. Często zdarza się pominięcie
      '-ldl' i bibliotek wymaganych dla obsługi bazy danych,
      którą wybrałeś.
     </para>
     <para>
      Niektórzy użytkownicy zgłaszali też, że musieli dodać '-ldl' bezpośrednio
      po <filename>libphp4.a</filename> podczas linkowania z Apache.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.build.not-running">
    <question>
     <para>
      Przeszedłem przez wszystkie kroki instalacji modułu Apache w wersji na
      Unix, ale moje skrypty PHP pokazują się w przeglądarce lub pokazuje się
      okno zapisu pliku.
     </para>
    </question>
    <answer>
     <para>
      To oznacza, że moduł PHP nie jest wywoływany z jakiegoś powodu.
      Przed poproszeniem o pomoc należy sprawdzić trzy rzeczy:
      <itemizedlist>
       <listitem>
        <simpara>
         Upewnij się, że plik httpd, którą uruchamiasz jest faktycznie
         nowym plikiem binarnym httpd, kóry właśnie skompilowałeś. Aby to zrobić uruchom:
         <literal>/path/to/binary/httpd -l</literal>
        </simpara>
        <simpara>
         Jeżeli nie widzisz <filename>mod_php4.c</filename> wymienionego, to
         nie uruchamiasz poprawnego pliku binarnego. Znajdź i zainstaluj
         poprawny plik binarny.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Upewnij się, że dodałeś poprawny typ Mime do jednego z Twoich plików
         <literal>Apache .conf</literal>. Powinno to być: 
         <literal>AddType application/x-httpd-php .php</literal>
        </simpara>
        <simpara> 
         Upewnij się też, że ta linia AddType nie jest ukryta wewnątrz
         bloku &lt;Virtualhost&gt; lub &lt;Directory&gt;, który
         zapobiegłby użyciu jej dla lokalizacji Twojego skryptu testowego.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         W końcu, domyślna lokalizacja plików konfiguracyjnych Apache
         zmieniła się między Apache 1.2 i Apache 1.3. Powinieneś sprawdzić
         i upewnić się, że plik konfiguracyjny, w którym dodajesz linię z
         AddLine jest faktycznie odczytywany. Możesz umieścić oczywisty błąd składniowy
         wewnątrz pliku &httpd.conf; lub inną zmianę, która
         powie Ci, czy odczytywany jest poprawny plik.
        </simpara>
       </listitem>
      </itemizedlist>
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.build.activate-module">
    <question>
     <para>
      It says to use: <literal>--activate-module=src/modules/php4/libphp4.a</literal>, 
      but  that file doesn't exist, so I changed it to 
      <literal>--activate-module=src/modules/php4/libmodphp4.a</literal> and it 
      doesn't work!? What's going on?
     </para>
    </question>
    <answer>
     <para>
      Note that the <filename>libphp4.a</filename> file is not supposed to exist.  The
      apache process will create it!
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.build.ansi">
    <question>
     <para>
      When I try to build Apache with PHP as a static module using 
      <literal>--activate-module=src/modules/php4/libphp4.a</literal> 
      it tells me that my compiler is not ANSI compliant.
     </para>
    </question>
    <answer>
     <para>
      This is a misleading error message from Apache that has been fixed
      in more recent versions.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.build.apxs">
    <question>
     <para>
      When I try to build PHP using <option 
      role="configure">--with-apxs</option> I get strange error messages.
     </para>
    </question>
    <answer>
     <para>
      There are three things to check here.  First, for some reason
      when Apache builds the apxs Perl script, it sometimes ends up
      getting built without the proper compiler and flags variables.
      Find your apxs script (try the command <command>which apxs</command>), 
      it's sometimes found in <filename>/usr/local/apache/bin/apxs</filename>
      or <filename>/usr/sbin/apxs</filename>.
      Open it and check for lines similar to these:
      <programlisting>
<![CDATA[
my $CFG_CFLAGS_SHLIB  = ' ';          # substituted via Makefile.tmpl
my $CFG_LD_SHLIB      = ' ';          # substituted via Makefile.tmpl
my $CFG_LDFLAGS_SHLIB = ' ';          # substituted via Makefile.tmpl
]]>
      </programlisting>
      If this is what you see, you have found your problem.  They may 
      contain just spaces or other incorrect values, such as 'q()'.  Change 
      these lines to say:
      <programlisting>
<![CDATA[
my $CFG_CFLAGS_SHLIB  = '-fpic -DSHARED_MODULE'; # substituted via Makefile.tmpl
my $CFG_LD_SHLIB      = 'gcc';                   # substituted via Makefile.tmpl
my $CFG_LDFLAGS_SHLIB = q(-shared);              # substituted via Makefile.tmpl 
]]>
      </programlisting>
      The second possible problem should only be an issue on Red Hat 6.1
      and 6.2.  The apxs script Red Hat ships is broken.  Look for this line:
      <programlisting>
<![CDATA[
my $CFG_LIBEXECDIR    = 'modules';         # substituted via APACI install
]]>
      </programlisting>
      If you see the above line, change it to this:
      <programlisting>
<![CDATA[
my $CFG_LIBEXECDIR    = '/usr/lib/apache'; # substituted via APACI install
]]>
      </programlisting>
       Last, if you reconfigure/reinstall Apache, add a <command>make clean</command> 
       to the process after <command>./configure</command> and before <command>make</command>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.build.microtime">
    <question>
     <para>
      During <command>make</command>, I get errors in microtime, 
      and a lot of <literal>RUSAGE_</literal> stuff.
     </para>
    </question>
    <answer>
     <para>
      During the <command>make</command> portion of installation, 
      if you encounter problems that look similar to this:
      <programlisting>
<![CDATA[
microtime.c: In function `php_if_getrusage':
microtime.c:94: storage size of `usg' isn't known
microtime.c:97: `RUSAGE_SELF' undeclared (first use in this function)
microtime.c:97: (Each undeclared identifier is reported only once
microtime.c:97: for each function it appears in.)
microtime.c:103: `RUSAGE_CHILDREN' undeclared (first use in this function)
make[3]: *** [microtime.lo] Error 1
make[3]: Leaving directory `/home/master/php-4.0.1/ext/standard'
make[2]: *** [all-recursive] Error 1
make[2]: Leaving directory `/home/master/php-4.0.1/ext/standard'
make[1]: *** [all-recursive] Error 1
make[1]: Leaving directory `/home/master/php-4.0.1/ext'
make: *** [all-recursive] Error 1
]]>
      </programlisting>
     </para>
     <para>
      Your system is broken.  You need to fix your <filename>/usr/include</filename> files by
      installing a glibc-devel package that matches your glibc.  This has
      absolutely nothing to do with PHP.  To prove this to yourself, try this
      simple test:
     <programlisting>
<![CDATA[
$ cat >test.c <<X
#include <sys/resource.h>
X
$ gcc -E test.c >/dev/null
]]>
      </programlisting>
      If that spews out errors, you know your include files are messed up. 
     </para>
    </answer>
   </qandaentry>
   
   <qandaentry xml:id="faq.build.mysql.tempnam">
    <question>
     <para>
      When compiling PHP with MySQL, configure runs fine but during
      <literal>make</literal> I get an error similar to the following:
      <emphasis>ext/mysql/libmysqlclient/my_tempnam.o(.text+0x46): In function 
      my_tempnam': /php4/ext/mysql/libmysqlclient/my_tempnam.c:103: the 
      use of tempnam' is dangerous, better use mkstemp'</emphasis>, 
      what's wrong?
     </para>
    </question>
    <answer>
     <para>
      First, it's important to realize that this is a <literal>
      Warning</literal> and not a fatal error.  Because this is
      often the last output seen during <literal>make</literal>,
      it may seem like a fatal error but it's not.  Of course, if
      you set your compiler to die on Warnings, it will.  Also
      keep in mind that MySQL support is enabled by default.
     </para>
     <note>
      <para>
       As of PHP 4.3.2, you'll also see the following text after
       the build (make) completes:
      </para>
      <para>
       <screen>
        Build complete.
        (It is safe to ignore warnings about tempnam and tmpnam).
       </screen>
      </para>
     </note>
    </answer>
   </qandaentry>
   
   <qandaentry xml:id="faq.build.upgrade">
    <question>
     <para>
      I want to upgrade my PHP. Where can I find the <command>./configure</command>
      line that was used to build my current PHP installation?
     </para>
    </question>
    <answer>
     <para>
      Either you look at config.nice file, in the source tree of your current PHP
      installation or, if this is not available, you simply run a 
      <programlisting role="php">
<![CDATA[
       <?php phpinfo(); ?> 
]]>
      </programlisting>
      script. On top of the output the <command>./configure</command> line, that was used
      to build this PHP installation is shown.
     </para>
    </answer>
   </qandaentry>
   
   <qandaentry xml:id="faq.build.gdlibs">
    <question>
     <para>
      When building PHP with the GD library it either gives strange compile errors
      or segfaults on execution.
     </para>
    </question>
    <answer>
     <para>
      Make sure your GD library and PHP are linked against the same depending
      libraries (e.g. libpng).
     </para>
    </answer>
   </qandaentry>   
   
   <qandaentry xml:id="faq.installation.needgnu">
    <question>
     <para>
      When compiling PHP I seemingly get random errors, like it hangs.
      I'm using Solaris if that matters.
     </para>
    </question>
    <answer>
     <para>
      Using non-GNU utilities while compiling PHP may cause problems.  Be
      sure to use GNU tools in order to be certain that compiling PHP will
      work.  For example, on Solaris, using either the SunOS BSD-compatible
      or Solaris versions of <literal>sed</literal> will not work, but using
      the GNU or Sun POSIX (xpg4) versions of <literal>sed</literal> will
      work.  Links: <link xlink:href="&url.sed;">GNU sed</link>,
      <link xlink:href="&url.flex;">GNU flex</link>, and
      <link xlink:href="&url.bison;">GNU bison</link>.
     </para>
    </answer>
   </qandaentry>
  </qandaset>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
