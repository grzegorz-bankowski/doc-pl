<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: a9edd62d087ab1eb6292c795b7256e14ff9f1234 Maintainer: sobak Status: ready -->
 <sect1 xml:id="language.oop5.references" xmlns="http://docbook.org/ns/docbook">
  <title>Obiekty i referencje</title>
  <para>
   Jedną z często wspominanych zasad programowania zorientowanego obiektowo w PHP jest to,
   że "obiekty są zawsze domyślnie przekazywane przez referencję". Nie jest to do końca prawda.
   Ten rozdział koryguje to ogólne stwierdzenie z pomocą kilku przykładów.
  </para>

  <para>
   Referencja w PHP działa jak alias, który pozwala dwóm różnym zmiennym zapisywać
   tę samą wartość. W PHP zmienna obiektu nie zawiera samego obiektu
   jako wartości. Zawiera tylko identyfikator obiektu, który pozwala
   kodowi używającemu obiektu na jego faktyczne znalezienie. Gdy obiekt jest przekazywany jako
   argument, zwracany lub przypisywany do innej zmiennej, różne zmienne nie są aliasami:
   one wszystkie mają kopię identyfikatora, który wskazuje na ten sam
   obiekt.
  </para>

  <example>
   <title>Referencje i obiekty</title>
   <programlisting role="php">
<![CDATA[
<?php
class A {
    public $foo = 1;
}  

$a = new A;
$b = $a;     // $a i $b są kopiami tego samego identyfikatora
             // ($a) = ($b) = <id>
$b->foo = 2;
echo $a->foo."\n";


$c = new A;
$d = &$c;    // $c i $d są referencjami
             // ($c,$d) = <id>

$d->foo = 2;
echo $c->foo."\n";


$e = new A;

function foo($obj) {
    // ($obj) = ($e) = <id>
    $obj->foo = 2;
}

foo($e);
echo $e->foo."\n";

?>  
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
2
2
2
]]>
   </screen>
  </example>
 </sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
