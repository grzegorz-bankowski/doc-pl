<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 77f5f3b3a8bbe1ad7727201c7603d1419dd7840f Maintainer: sobak Status: ready -->
<!-- $Revision$ -->
 <chapter xml:id="introduction" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <info>
   <titleabbrev>Wprowadzenie</titleabbrev>
   <title>Czym jest PHP i co potrafi?</title>
  </info>

  <section xml:id="intro-whatis" annotations="chunk:false">
   <info><title>Czym jest PHP?</title></info>
   <para>
    <acronym>PHP</acronym> (akronim rekurencyjny od <emphasis>PHP: Hypertext
    Preprocessor</emphasis>) to popularny język skryptowy open source
    ogólnego przeznaczenia, który jest szczególne przystosowany do tworzenia
    aplikacji internetowych i może zostać osadzony w kodzie HTML.
   </para>
   <para>
    Nieźle, ale co to w zasadzie znaczy? Przykład:
   </para>
   <para>
    <example>
     <info><title>Przykład wprowadzający</title></info>
     <programlisting role="php">
<![CDATA[
<!DOCTYPE html>
<html>
    <head>
        <title>Przykład</title>
    </head>
    <body>

        <?php
            echo "Hej, jestem skryptem PHP!";
        ?>

    </body>
</html>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Zamiast wielu komend do wyświetlenia HTML (jak w C lub Perlu),
    strony w PHP zawierają HTML z osadzonym kodem, który robi
    <replaceable>coś</replaceable> (w tym wypadku wyświetla <computeroutput>Hej, jestem skryptem PHP!</computeroutput>).
    Kod PHP jest zamknięty w specjalnych <link
    linkend="language.basic-syntax.phpmode">instrukcjach początku i
    końca przetwarzania <code>&lt;?php</code> i <code>?&gt;</code></link>,
    które pozwalają na "wskoczenie" i "wyskoczenie" z <quote>trybu PHP</quote>.
   </para>
   <para>
    Tym co odróżnia PHP od rzeczy takich jak JavaScript po stronie klienta,
    jest fakt, że kod jest wykonywany na serwerze, generując HTML, który
    jest później wysyłany do klienta. Klient odbierze wynik działania
    skryptu, ale nie będzie wiedział, jaki kod stał za jego wygenerowaniem.
    Serwer WWW może być nawet skonfigurowany tak, aby przetwarzał wszystkie pliki HTML
    z pomocą parsera PHP. Użytkownicy nie będą wtedy mieli żadnego sposobu,
    aby stwierdzić czy korzystasz z PHP.
   </para>
   <para>
    Najlepszą cechą PHP jest fakt że jest on bardzo prosty dla
    początkujących, a jednocześnie oferuje wiele zaawansowanych możliwości
    dla profesjonalnych programistów. Niech nie zrazi Cię długa lista
    możliwości PHP. Używając PHP niemal każdy może zacząć pisać
    proste skrypty już po krótkim czasie.
   </para>
   <para>
    Mimo iż rozwój PHP skupia się na skryptowaniu po stronie serwera,
    można z jego pomocą zrobić znacznie więcej. Kontynuuj czytanie
    w rozdziale <link linkend="intro-whatcando">Co potrafi PHP?</link>
    lub przejdź prosto do <link linkend="tutorial">tutoriala
    wprowadzającego</link>, aby natychmiast rozpocząć naukę programowania webowego.
   </para>
  </section>

  <section xml:id="intro-whatcando" annotations="chunk:false">
   <info><title>Co potrafi PHP?</title></info>
   <para>
    Wszystko. PHP skupia się głównie na skryptowaniu po stronie serwera,
    więc może robić wszystko to, co dowolny inny program CGI, jak na
    przykład odbieranie danych z formularzy, generowanie dynamicznej treści
    strony czy wysyłanie i odbieranie ciasteczek. Lecz PHP może znacznie więcej.
   </para>
   <para>
    Istnieją dwa główne obszary, w których są wykorzystywane skrypty PHP.
    <itemizedlist>
     <listitem>
      <simpara>
       Skryptowanie po stronie serwera. To najczęściej wykorzystywany
       i docelowo główny obszar działania dla PHP. Potrzebne są trzy
       rzeczy, aby działać: parser PHP (CGI lub moduł serwera),
       serwer WWW oraz przeglądarka internetowa. Wszystkie te rzeczy
       możesz uruchomić na swoim komputerze, aby po prostu poeksperymentować 
       z programowaniem w PHP. Zobacz
       <link linkend="install">instrukcje instalacji</link>,
       aby uzyskać więcej informacji.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Skryptowanie wiersza poleceń. Skrypt PHP może być uruchomiony
       bez żadnego serwera i przeglądarki, w tej sytuacji
       używany jest tylko parser PHP.
       Taki rodzaj wykorzystania jest idealny dla skryptów regularnie
       uruchamianych przez <command>cron</command> (w systemach Unix i macOS) lub Harmonogram
       Zadań (na Windowsie). Takie skrypty mogą być również użyte do
       prostych zadań przetwarzania tekstu. Zapoznaj się z rozdziałem o
       <link linkend="features.commandline">Używaniu PHP z wiersza poleceń</link>,
       aby dowiedzieć się więcej.
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    PHP może być <link linkend="install">używany</link> na wszystkich ważnych systemach operacyjnych, w tym
    Linuksie, wielu wariantach Uniksa (wliczając HP-UX, Solaris i OpenBSD),
    Microsoft Windows, macOS, RISC OS i prawdopodobnie innych.
    PHP ma także wsparcie dla większości obecnych serwerów WWW, wliczając
    Apache, IIS i wiele innych. Wliczają się w to także dowolne
    serwery ze wsparciem dla FastCGI PHP, jak lighttpd
    i nginx. PHP działa jako moduł lub procesor CGI.
   </para>
   <para>
    Tak więc z PHP programiści mają wolność wyboru systemu operacyjnego
    i serwera WWW. Ponadto mają także wybór między używaniem
    programowania proceduralnego, obiektowego (OOP) lub mieszanki
    ich obu.
   </para>
   <para>
    PHP nie jest ograniczone jedynie do generowania kodu HTML. PHP może też
    generować bardziej złożone typy plików (jak obrazy lub pliki PDF), szyfrować dane,
    czy wysyłać emaile. Może też łatwo generować dowolny tekst, na przykład JSON
    lub XML. PHP może automatycznie generować te pliki i zapisać je w
    systemie plików, zamiast każdorazowo generować je od zera, więc może posłużyć za cache po stronie serwera
    dla dynamicznej zawartości.
   </para>
   <para>
    Jedną z najbardziej istotnych cech PHP jest wsparcie
    dla <link linkend="refs.database">szerokiej gamy baz danych</link>. 
    Tworzenie stron wykorzystujących bazy danych jest niesamowicie proste
    dzięki możliwości użycia rozszerzeń dla konkretnej bazy danych (np. dla <link linkend="book.mysqli">mysql</link>)
    lub użyciu warstwy abstrakcji jak <link linkend="book.pdo">PDO</link>, czy też połączeniu
    do dowolnej bazy wspierającej standard Open Database Connection poprzez rozszerzenie
    <link linkend="book.uodbc">ODBC</link>. Niektóre bazy danych mogą także używać
    <link linkend="book.curl">cURLa</link> lub <link linkend="book.sockets">socketów</link>,
    jak CouchDB.
   </para>
   <para>
    PHP ma też wsparcie dla komunikacji z innymi usługami, używając protokołów
    takich jak LDAP, IMAP, SNMP, NNTP, POP3, HTTP, COM (w systemie Windows) i
    niezliczonych innych. Może także otwierać surowe sockety sieciowe dla
    interakcji z dowolnym innym protokołem. PHP ma wsparcie dla WDDX,
    kompleksowej wymiany danych między niemal wszystkimi językami webowymi.
    Mowiąc o łączeniu z innymi językami, PHP ma wsparcie dla tworzenia
    obiektów Javy i używania ich jako obiektów PHP.
   </para>
   <para>
    PHP ma parę przydatnych opcji dla <link linkend="refs.basic.text">przetwarzania tekstu</link>,
    w tym wyrażenia regularne kompatybilne z Perlem (<link linkend="book.pcre">PCRE</link>)
    oraz wiele rozszerzeń i narzędzi do <link linkend="refs.xml">odczytu i parsowania dokumentów XML</link>.
    PHP standardyzuje wszystkie rozszerzenia dzięki solidnej podstawie <link linkend="book.libxml">libxml2</link>
    i rozszerza zakres możliwości dodając rozszerzenia jak <link linkend="book.simplexml">SimpleXML</link>,
    <link linkend="book.xmlreader">XMLReader</link> i <link linkend="book.xmlwriter">XMLWriter</link>.
   </para>
   <para>
    A także wiele innych interesujących rozszerzeń, które zostały podzielone zarówno
    <link linkend="extensions">alfabetycznie</link> jak i <link linkend="funcref">według kategorii</link>.
    Istnieją też dodatkowe <link linkend="install.pecl.intro">rozszerzenia PECL</link>, które zostały lub nie zostały opisane w
    podręczniku PHP, jak <link xlink:href="&url.xdebug;">XDebug</link>.
   </para>
   <para>
    Ta strona to za mało, aby wymienić
    wszystkie możliwości i korzyści, które oferuje PHP.
    Przejdź do rozdziału o <link linkend="install">instalacji
    PHP</link> i zobacz sekcję <link linkend="funcref">Opis
    Funkcji</link>, aby zapoznać się ze wcześniej wymienionymi
    rozszerzeniami.
   </para>
  </section>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
