<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: fadab82e11cf93c08eb214cf9d67e9e5ac586a30 Maintainer: sobak Status: ready -->
<!-- $Revision$ -->
<refentry xml:id="reflectionclassconstant.getattributes" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>ReflectionClassConstant::getAttributes</refname>
  <refpurpose>Pobiera atrybuty</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="ReflectionClassConstant">
   <modifier>public</modifier> <type>array</type><methodname>ReflectionClassConstant::getAttributes</methodname>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>name</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Zwraca wszystkie atrybuty zdefiniowane dla stałej klasy jako tablicę obiektów <type>ReflectionAttribute</type>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   &reflection.getattributes.param.name;
   &reflection.getattributes.param.flags;
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Tablica obiektów <classname>ReflectionAttribute</classname>.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Podstawowe użycie</title>
    <programlisting role="php">
<![CDATA[
<?php
#[Attribute]
class Owoc {
}

#[Attribute]
class Czerwony {
}

class Kosz {
    #[Owoc]
    #[Czerwony]
    public const JABLKO = 'jablko';
}

$classConstant = new ReflectionClassConstant('Kosz', 'JABLKO');
$attributes = $classConstant->getAttributes();
print_r(array_map(fn($attribute) => $attribute->getName(), $attributes));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [0] => Owoc
    [1] => Czerwony
)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Filtrowanie wyników po nazwie klasy</title>
    <programlisting role="php">
<![CDATA[
<?php
#[Attribute]
class Owoc {
}

#[Attribute]
class Czerwony {
}

class Kosz {
    #[Owoc]
    #[Czerwony]
    public const JABLKO = 'jablko';
}

$classConstant = new ReflectionClassConstant('Kosz', 'JABLKO');
$attributes = $classConstant->getAttributes('Owoc');
print_r(array_map(fn($attribute) => $attribute->getName(), $attributes));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [0] => Owoc
)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Filtrowanie wyników po nazwie klasy, z uwzględnieniem dziedziczenia</title>
    <programlisting role="php">
<![CDATA[
<?php
interface Kolor {
}

#[Attribute]
class Owoc {
}

#[Attribute]
class Czerwony implements Kolor {
}

class Kosz {
    #[Owoc]
    #[Czerwony]
    public const JABLKO = 'jablko';
}

$classConstant = new ReflectionClassConstant('Kosz', 'JABLKO');
$attributes = $classConstant->getAttributes('Kolor', ReflectionAttribute::IS_INSTANCEOF);
print_r(array_map(fn($attribute) => $attribute->getName(), $attributes));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [0] => Czerwony
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>ReflectionClass::getAttributes</methodname></member>
    <member><methodname>ReflectionFunctionAbstract::getAttributes</methodname></member>
    <member><methodname>ReflectionParameter::getAttributes</methodname></member>
    <member><methodname>ReflectionProperty::getAttributes</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
