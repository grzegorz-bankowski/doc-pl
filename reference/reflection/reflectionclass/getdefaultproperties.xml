<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: ec2fe9a592f794978114ef5021db9f1d00c2e05d Maintainer: sobak Status: ready -->
<!-- $Revision$ -->
<refentry xml:id="reflectionclass.getdefaultproperties" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>ReflectionClass::getDefaultProperties</refname>
  <refpurpose>Pobiera domyślne właściwości</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="ReflectionClass">
   <modifier>public</modifier> <type>array</type><methodname>ReflectionClass::getDefaultProperties</methodname>
   <void/>
  </methodsynopsis>
  <para>
   Pobiera domyślne właściwości klasy (w tym odziedziczone właściwości).
  </para>
  <note>
   <para>
    Ta metoda działa dla właściwości statycznych tylko gdy użyto jej dla klas wbudowanych PHP.
    Pobranie domyślnej wartości statycznej właściwości klasy nie jest możliwe
    dla klas zdefiniowanych przez użytkownika.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Tablica (<type>array</type>) domyślnych właściwości, gdzie klucz to nazwa
   właściwości a wartość tablicy to domyślna wartość właściwości lub &null;
   jeśli właściwość nie ma domyślnej wartości. Ta funkcja nie wprowadza rozróżnienia
   dla metod statycznych i niestatycznych oraz nie bierze pod uwagę modyfikatorów
   widoczności.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Przykład użycia <methodname>ReflectionClass::getDefaultProperties</methodname></title>
    <programlisting role="php">
<![CDATA[
<?php
class Bar {
    protected $inheritedProperty = 'dziedziczonaWartośćDomyślna';
}

class Foo extends Bar {
    public $property = 'domyślnaWartość';
    private $privateProperty = 'domyślnaWartośćPrywatnejWłaściwości';
    public static $staticProperty = 'właściwośćStatyczna';
    public $wlasciwoscBezWartosciDomyslnej;
}

$reflectionClass = new ReflectionClass('Foo');
var_dump($reflectionClass->getDefaultProperties());
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(5) {
   ["staticProperty"]=>
   string(19) "właściwośćStatyczna"
   ["property"]=>
   string(15) "domyślnaWartość"
   ["privateProperty"]=>
   string(35) "domyślnaWartośćPrywatnejWłaściwości"
   ["wlasciwoscBezWartosciDomyslnej"]=>
   NULL
   ["inheritedProperty"]=>
   string(16) "dziedziczonaWartośćDomyślna"
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>ReflectionClass::getProperties</methodname></member>
    <member><methodname>ReflectionClass::getStaticProperties</methodname></member>
    <member><methodname>ReflectionClass::getProperty</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
