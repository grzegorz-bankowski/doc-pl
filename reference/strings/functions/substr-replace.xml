<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: e095023e408c8cb6378ae16bb6870343a3946919 Maintainer: sMeRFx Status: ready -->
<!-- $Revision$ -->
<refentry xml:id="function.substr-replace" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>substr_replace</refname>
  <refpurpose>Zastępuje tekst wewnątrz części łańcucha</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>array</type></type><methodname>substr_replace</methodname>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>string</parameter></methodparam>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>replace</parameter></methodparam>
   <methodparam><type class="union"><type>array</type><type>int</type></type><parameter>offset</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>array</type><type>int</type><type>null</type></type><parameter>length</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>substr_replace</function> zamienia kopię łańcucha
   <parameter>string</parameter> ograniczoną przez parametry
   <parameter>offset</parameter> i (opcjonalnie)
   <parameter>length</parameter> w ciągu znaku podanym w
   <parameter>replace</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       Wejściowy ciąg znaków.
      </para>
      <para>
       Można przekazać tablicę ciągu znaków (<type>string</type>ów). W tym
       wypadku zamiana zostanie dokonana na każdym z przekazanych ciągów. W takim
       wypadku parametry <parameter>replace</parameter>, <parameter>offset</parameter>
       i <parameter>length</parameter> mogą być przekazane jako
       wartości skalarne aby zastosować je do każdego z ciągów znaków lub
       jako tablice (<type>array</type>), aby odpowiadający element tablicy
       został użyty dla każdego z wejściowych ciągów znaków.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replace</parameter></term>
     <listitem>
      <para>
       Ciąg znaków, na który zamieniamy.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       Jeżeli <parameter>offset</parameter> nie jest ujemny, zamiana
       rozpocznie się od znaku określonego przez <parameter>offset</parameter>
       w ciągu <parameter>string</parameter>.
      </para>
      <para>
       Jeżeli <parameter>offset</parameter> jest ujemny, zamiana
       rozpocznie się od tylu znaków od końca ciągu <parameter>string</parameter>,
       ile przekazano w <parameter>offset</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       Jeżeli podano i jest dodatnia, reprezentuje długość części ciągu
       <parameter>string</parameter>, która ma być zamieniona. Jeśli jest
       ujemna to oznacza liczbę znaków od końca ciągu
       <parameter>string</parameter>, po których powinniśmy przestać zamieniać.
       Jeżeli nie podano, to domyślnie zostanie przyjęta wartość strlen(
       <parameter>string</parameter> ); czyli zamienianie zakończy się wraz
       z końcem ciągu <parameter>string</parameter>. Rzecz jasna jeśli
       <parameter>length</parameter> wynosi zero, to ta funkcja będzie
       wstawiać ciąg <parameter>replace</parameter> do ciągu
       <parameter>string</parameter> w miejsce określone przez
       <parameter>offset</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Zwraca wynikowy ciąg znaków. Jeśli <parameter>string</parameter> jest
   tablicą, to zwracana jest tablica.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        Parametr <parameter>length</parameter> dopuszcza teraz &null;.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Przykłady użycia <function>substr_replace</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$var = 'ABCDEFGH:/MNRPQR/';
echo "Original: $var<hr />\n";

/* Te dwa przykłady zastępują całość $var ciągiem 'bob'. */
echo substr_replace($var, 'bob', 0) . "<br />\n";
echo substr_replace($var, 'bob', 0, strlen($var)) . "<br />\n";

/* Wstawia 'bob' odpowiednio na początku $var. */
echo substr_replace($var, 'bob', 0, 0) . "<br />\n";

/* Następne zastępują  'MNRPQR' w $var ciągiem 'bob'. */
echo substr_replace($var, 'bob', 10, -1) . "<br />\n";
echo substr_replace($var, 'bob', -7, -1) . "<br />\n";

/*Usuwa 'MNRPQR' z $var. */
echo substr_replace($var, '', 10, -1) . "<br />\n";
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>
     Użycie <function>substr_replace</function> do zamiany wielu ciągów
     na raz
    </title>
    <programlisting role="php">
     <![CDATA[
<?php
$input = array('A: XXX', 'B: XXX', 'C: XXX');

// Prosty przypadek: w każdym z ciągów zamień XXX na YYY.
echo implode('; ', substr_replace($input, 'YYY', 3, 3))."\n";

// Bardziej skomplikowany przykład, gdzie w każdym zamieniamy na coś innego.
$replace = array('AAA', 'BBB', 'CCC');
echo implode('; ', substr_replace($input, $replace, 3, 3))."\n";

// Za każdym razem zamień inną ilość znaków.
$length = array(1, 2, 3);
echo implode('; ', substr_replace($input, $replace, 3, $length))."\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
     <![CDATA[
A: YYY; B: YYY; C: YYY
A: AAA; B: BBB; C: CCC
A: AAAXX; B: BBBX; C: CCC
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>str_replace</function></member>
    <member><function>substr</function></member>
    <member><link linkend="language.types.string.substr">String access and modification by character</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
