<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: d58ee8eaaa7f716c51f66f5f1058ab3c42376d98 Maintainer: leszek Status: ready -->
<!-- $Revision$ -->
<!-- CREDITS: sobak -->
<refentry xml:id="function.compact" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>compact</refname>
  <refpurpose>Tworzy tablicę zawierającą zmienne i ich wartości</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>compact</methodname>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>var_name</parameter></methodparam>
   <methodparam rep="repeat"><type class="union"><type>array</type><type>string</type></type><parameter>var_names</parameter></methodparam>
  </methodsynopsis>
  <para>
   Tworzy tablicę zawierającą zmienne i ich wartości.
  </para>
  <para>
   Dla każdej z nich <function>compact</function> sprawdza zmienną o
   tej nazwie w obecnej
   <link linkend="features.gc.refcounting-basics">tablicy symboli</link>
   i dodaje ją do tablicy wyjściowej tak, że nazwa zmiennej staje się kluczem,
   a zawartość zmiennej wartością dla tego klucza. 
   Krótko mówiąc, funkcja ta jest przeciwieństwem <function>extract</function>.
  </para>
  <note>
   <para>
    Przed PHP 7.3 wszystkie nieustawione ciągi znaków były pomijane bez zgłaszania jakichkolwiek komunikatów.
   </para>
  </note>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>var_name</parameter></term>
     <term><parameter>var_names</parameter></term>
     <listitem>
      <para>
       <function>compact</function> przyjmuje zmienną liczbę parametrów. 
       Każdy parametr może być albo ciągiem znaków zawierającym nazwę 
       zmiennej lub tablicą nazw zmiennych. Tablica może zawierać w sobie 
       inne tablice nazw zmiennych; <function>compact</function> 
       obsłuży je rekurencyjnie.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Zwraca tablicę wynikową ze wszystkimi zmiennymi dodanymi do niej.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <function>compact</function> zgłąsza błąd o poziomie <constant>E_WARNING</constant>, jeżeli podany ciąg znaków
   odnosi się do nieustawionej zmiennej.
  </para>
 </refsect1>

 <refsect1 role="changelog"><!-- {{{ -->
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Jeżeli podany ciąg znaków odnosi się do nieustawionej zmiennej, to zgłaszany jest błąd o poziomie <constant>E_WARNING</constant>.
      </entry>
     </row>
     <row>
      <entry>7.3.0</entry>
      <entry>
       <function>compact</function> zgłasza teraz <constant>E_NOTICE</constant> jeżeli podany ciąg znaków
       odnosi się do nieustawionej zmiennej. Wcześniej takie ciągi znaków były po prostu pomijane, bez zgłaszania problemów.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1><!-- }}} -->

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Przykład użycia <function>compact</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$city  = "San Francisco";
$state = "CA";
$event = "SIGGRAPH";

$location_vars = array("city", "state");

$result = compact("event", $location_vars);
print_r($result);

?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Array
(
    [event] => SIGGRAPH
    [city] => San Francisco
    [state] => CA
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <title>Pułapka</title>
   <para>
    Jako że <link linkend="language.variables.variable">zmienne
    zmiennych</link> nie mogą być używane z
    <link linkend="language.variables.superglobals">tablicami
     superglobalnymi</link> PHP wewnątrz funkcji, to tablice superglobalne nie mogą być przekazywane
    do <function>compact</function>.
   </para>
  </note>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>extract</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
