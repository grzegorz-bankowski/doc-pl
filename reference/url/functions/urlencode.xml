<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 767338231c3e14c7be5399b8e2e0c3b60f7ae8dd Maintainer: adi Status: ready -->
<!-- $Revision$ -->
<!-- CREDITS: sobak -->
<refentry xml:id="function.urlencode" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>urlencode</refname>
  <refpurpose>Koduje łańcuch metodą kodowania URLi</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>urlencode</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
  </methodsynopsis>
  <para>
   Ta funkcja jest przydatna do zakodowania ciągu znaków tak, aby mógł być użyty
   w części query string (po znaku <literal>?</literal>) adresu URL, tak aby wygodnie
   przekazać je do kolejnej strony.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       Ciąg znaków do zakodowania.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Zwraca łańcuch w którym wszystkie niealfanumeryczne znaki z wyjątkiem 
   <literal>-_.</literal> zostały zastąpione przez dwie cyfry szesnastkowe
   poprzedzone znakiem procenta (<literal>%</literal>), a spacje kodowane
   są jako znak plus (<literal>+</literal>). To kodowanie jest takie samo, jak
   wykorzystywane przy przesyłaniu danych z formularzy WWW, tj.
   takie samo jak w media typie:
   <literal>application/x-www-form-urlencoded</literal>.
   Różni się od kodowania z <link xlink:href="&url.rfc;3986">RFC 3986</link> (zobacz
   <function>rawurlencode</function>) tym, że z powodów historycznych,
   spacje są kodowane jako znak plus (+).
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Przykład użycia <function>urlencode</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$userinput = 'Data123!@-_ +';
echo "UserInput: $userinput\n";
echo '<a href="mycgi?foo=', urlencode($userinput), '">';
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="html">
     <![CDATA[
UserInput: Data123!@-_ +
<a href="mycgi?foo=Data123%21%40-_+%2B">
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Przykład użycia <function>urlencode</function> i <function>htmlentities</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$foo = 'Data123!@-_ +';
$bar = "Not the same content as $foo";
echo "foo: $foo\n";
echo "bar: $bar\n";
$query_string = 'foo=' . urlencode($foo) . '&bar=' . urlencode($bar);
echo '<a href="mycgi?' . htmlentities($query_string) . '">';
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="html">
<![CDATA[ 
foo: Data123!@-_ +
bar: Not the same content as Data123!@-_ +
<a href="mycgi?foo=Data123%21%40-_+%2B&amp;bar=Not+the+same+content+as+Data123%21%40-_+%2B">
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Uważaj na zmienne, które mogą zawierać encje HTML. Rzeczy takie jak
    &amp;amp, &amp;copy i &amp;pound są przetwarzane przez przeglądarkę i ich 
    używana jest ich rzeczywista encja, zamiast pożądanej nazwy zmiennej. To jest
    oczywisty problem, o którym W3C informuje ludzi od lat.
    Referencje są tutaj: <link xlink:href="&url.argsep;">&url.argsep;</link>.
   </para>
   <para>
    PHP obsługuje zmianę separatora argumentów na zalecany przez W3C
    średnik poprzez dyrektywę arg_separator .ini.  Niestety większość
    przeglądarek nie wysyła danych z formularza w formacie używającym średnik jako separatora.
    Bardziej przenośnym rozwiązaniem jest użycie &amp;amp; zamiast &amp; jako
    separatora.  Nie musisz wtedy zmieniać PHP-owego arg_separator.
    Zostaw separator jako &amp;, ale koduj swoje URL-e używając 
    <function>htmlentities</function> lub
    <function>htmlspecialchars</function>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>urldecode</function></member>
    <member><function>htmlentities</function></member>
    <member><function>rawurlencode</function></member>
    <member><function>rawurldecode</function></member>
    <member><link xlink:href="&url.rfc;3986">RFC 3986</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
