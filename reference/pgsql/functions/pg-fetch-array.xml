<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: cfeb14a38b666f6a3fc73da70f4a90fbe115e53f Maintainer: joeaccord Status: ready -->
<!-- $Revision$-->
<!-- CREDITS: jarek, garbus, sobak -->
<refentry xml:id="function.pg-fetch-array" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_fetch_array</refname>
  <refpurpose>Pobiera wiersz jako tablicę</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>pg_fetch_array</methodname>
   <methodparam><type>PgSql\Result</type><parameter>result</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>row</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter><initializer><constant>PGSQL_BOTH</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>pg_fetch_array</function> zwraca tablicę zawierającą dane z pobranego
   wiersza (rekordu).
  </para>
  <para>
   <function>pg_fetch_array</function> jest rozszerzoną wersją
   <function>pg_fetch_row</function>.  Oprócz zapisywania danych
   w tablicy wyników indeksowanej numerycznie zapisuje je też, używając indeksów
   przyporządkowujących (asocjacyjnych) tej tablicy, nazwy kolumn traktując jako klucze.
   Domyślnie zapisywane są oba rodzaje indeksów.
  </para>
  &database.fetch-null;
  <para>
   <function>pg_fetch_array</function> NIE jest znacznie
   wolniejsze, niż używanie <function>pg_fetch_row</function>, oraz
   jest zdecydowanie łatwiejsze do użycia.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>result</parameter></term>
     <listitem>
      &pgsql.parameter.result;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>row</parameter></term>
     <listitem>
      <para>
       Numer wiersza w wyniku do pobrania.  Wiersze są numerowane od zera w górę.  Jeśli jest pominięty
       albo wynosi &null;, pobrany zostanie kolejny wiersz.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      &pgsql.parameter.mode;
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Tablica (ang. <type>array</type>) indeksowana numerycznie (zaczynając od zera) lub
   asocjacyjnie (indeksowana przez nazwy kolumn), lub tak i tak.
   Każda wartość w tablicy (ang. <type>array</type>) jest przedstawiona jako łańcuch
   (ang. <type>string</type>). Wartości <literal>NULL</literal> z bazy danych
   są zwracane jako &null;.
  </para>
  <para>
   &false; zostanie zwrócone jeśli <parameter>wiersz</parameter> przekracza ilość
   wierszy w całym zbiorze, nie ma więcej wierszy, lub dowolnym innym błędzie.
   Próba pobrania danych z wyniku zapytania innego niż SELECT także zwróci &false;.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &pgsql.changelog.result-object;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Przykład użycia <function>pg_fetch_array</function></title>
    <programlisting role="php">
<![CDATA[
<?php 

$polaczenie_z_baza = pg_pconnect("dbname=wydawca");
if (!$polaczenie_z_baza) {
  echo "Wystąpił błąd.\n";
  exit;
}

$wynik = pg_query($polaczenie_z_baza, "SELECT autor, email FROM autorzy");
if (!$wynik) {
  echo "Wystąpił błąd.\n";
  exit;
}

$tab = pg_fetch_array($wynik, 0, PGSQL_NUM);
echo $tab[0] . " <- Wiersz 1 Autor\n";
echo $tab[1] . " <- Wiersz 1 E-mail\n";

// Parametr wiersz jest opcjonalny; można podać w zamian NULL,
// by podać typ_wyniku. Kolejne wywołanie funkcji pg_fetch_array
// zwróci następny wiersz.
$tab = pg_fetch_array ($wynik, 1, PGSQL_ASSOC);
echo $tab["autor"] . " <- Wiersz 2 Autor\n";
echo $tab["email"] . " <- Wiersz 2 E-mail\n";

$tab = pg_fetch_array($wynik);
echo $tab["autor"] . " <- Wiersz 3 Autor\n";
echo $tab[1] . " <- Wiersz 3 E-mail\n";

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_fetch_row</function></member>
    <member><function>pg_fetch_object</function></member>
    <member><function>pg_fetch_result</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
