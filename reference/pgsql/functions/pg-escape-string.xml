<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: c2eca73ef79ebe78cebb34053e41b565af504c4f Maintainer: sobak Status: ready -->
<!-- $Revision$-->
<!-- splitted from ./en/functions/pgsql.xml, last change in rev 1.61 -->
<!-- CREDITS: garbus, jarek -->
<refentry xml:id='function.pg-escape-string' xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_escape_string</refname>
  <refpurpose>
   Dodaje znaki ucieczki do łańcucha znaków (stringa) używanego w zapytaniach
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>pg_escape_string</methodname>
   <methodparam choice="opt"><type>PgSql\Connection</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>pg_escape_string</function> dodaje znaki ucieczki do łańcucha, którego chcemy
   użyć w zapytaniu do bazy danych. Zwraca łańcuch z sekwencjami Escape
   w formacie PostgreSQL-a bez cudzysłowów. <function>pg_escape_literal</function> jest
   bardziej zalecaną drogą zabezpieczenia parametrów SQL dla PostreSQL.
   Nie można używać funkcji <function>addslashes</function> z PostreSQL.
   Jeśli typem kolumny jest
   bytea, trzeba użyć funkcji <function>pg_escape_bytea</function>
   zamiast tej. Do zabezpieczenia identyfikatorów (np. nazw tabel i pól
   należy użyć funkcji <function>pg_escape_identifier</function>.
  </para>
  <note>
   <para>
    Funkcja wymaga PostgreSQL 7.2 lub nowszego.
    </para>
  </note>
 </refsect1>

<refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      &pgsql.parameter.connection-with-unspecified-default;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Ciąg znaków (ang. <type>string</type>) zawierający tekst bez sekwencji Escape.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Łańcuch (ang. <type>string</type>) zawierający dane z sekwencjami Escape.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &pgsql.changelog.connection-object;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Przykład użycia <function>pg_escape_string</function></title>
    <programlisting role="php">
<![CDATA[
<?php 
  // Połączenie do bazy danych
  $polaczenie = pg_connect('dbname=foo');
  
  // Przeczytaj plik tekstowy (zawierający apostrofy i ukośniki wsteczne)
  $dane = file_get_contents('list.txt');
  
  // Dodaj sekwencje Escape do danych
  $z_escape = pg_escape_string($dane);
  
  // Wpisz to do bazy danych
  pg_query("INSERT INTO korespondencja (nazwa, dane) VALUES ('Moj list', '{$z_escape}')");
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_escape_bytea</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
