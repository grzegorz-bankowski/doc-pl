<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 5c951013ca04161992efed8b86fb40f55669958e Maintainer: sobak Status: ready -->
<!-- $Revision$ -->
<!-- CREDITS: qrak -->
<!-- splitted from ./en/functions/datetime.xml, last change in rev 1.8 -->
<refentry xml:id="function.strtotime" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>strtotime</refname>
  <refpurpose>Parsuje większość angielskich tekstowych opisów daty i czasu do uniksowego znacznika czasu</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>strtotime</methodname>
   <methodparam><type>string</type><parameter>datetime</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>baseTimestamp</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <simpara>
   Funkcja oczekuje tekstu zawierającego datę w formacie angielskim
   i stara się przeliczyć ją na uniksowy znacznik czasu (liczbę sekund od
   01.01.1970 00:00:00 UTC), relatywnie do znacznika czasu podanego w
   <parameter>baseTimestamp</parameter> lub aktualnego czasu,
   jeśli znacznik nie zostanie podany. Parsowanie łańcucha daty
   zostało opisane w sekcji <link linkend="datetime.formats">formaty daty i czasu</link> i
   ma kilka drobnych niuansów. Stanowczo zalecamy przejrzenie szczegółów na ten temat.
  </simpara>
  <warning>
   <para>
    Znacznik czasu Uniksa zwracany przez tę funkcję nie zawiera informacji
    na temat stref czasowych. W celu dokonywania obliczeń na dacie/czasie
    powinieneś użyć <classname>DateTimeImmutable</classname>.
   </para>
  </warning>
  <para>
   Każdy z parametrów tej funkcji korzysta z domyślnej strefy czasowej
   dopóki nie określono jej w tym parametrze. Uważaj, żeby nie użyć
   różnych stref czasowych w każdym parametrze, o ile nie jest to zamierzone.
   Zobacz dokumentację <function>date_default_timezone_get</function> opisującą
   rożne drogi zdefiniowania domyślnej strefy czasowej.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>datetime</parameter></term>
     <listitem>
      <para>&date.formats.parameter;</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>baseTimestamp</parameter></term>
     <listitem>
      <para>
       Znacznik czasu używany jako podstawa do wyliczania dat
       relatywnych.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Zwraca znacznik czasu, gdy operacja się powiedzie, &false; w przeciwnym wypadku.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
   
   &date.timezone.errors.description;
 
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        Parametr <parameter>baseTimestamp</parameter> dopuszcza teraz &null;.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Przykład użycia <function>strtotime</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo strtotime("now"), "\n";
echo strtotime("10 September 2000"), "\n";
echo strtotime("+1 day"), "\n";
echo strtotime("+1 week"), "\n";
echo strtotime("+1 week 2 days 4 hours 2 seconds"), "\n";
echo strtotime("next Thursday"), "\n";
echo strtotime("last Monday"), "\n";
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Sprawdzanie wystąpienia błędów</title>
    <programlisting role="php">
<![CDATA[
<?php
$str = 'Zły tekst';

if (($timestamp = strtotime($str)) === false) {
    echo "Tekst ($str) jest niepoprawny";
} else {
    echo "$str == " . date('l dS \o\f F Y h:i:s A', $timestamp);
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Data "relatywna" w wypadku tej funkcji oznacza, że jeśli określony komponent
    daty/czasu nie został podany, to będzie on wyliczony względem wartości parametru
    <parameter>baseTimestamp</parameter>. To znaczy że wywołanie <code>strtotime('February')</code>,
    dnia 31. maja 2022 zostanie zinterpretowane jako <literal>31 February 2022</literal>,
    które przepełni zakres dla lutego, a więc zwróci <literal>3 March</literal>.
    (w roku przestępnym zwrócone zostałoby <literal>2 March</literal>). Użycie
    <code>strtotime('1 February')</code> lub <code>strtotime('first day of February')</code>
    pozwala uniknąć tego problemu.
   </para>
  </note>
  <note>
   <para>
    Jeżeli rok określono w formacie dwucyfrowym, wartości pomiędzy
    00-69 są mapowane do 2000-2069, a 70-99 do 1970-1999. Zobacz notatki poniżej,
    aby poznać możliwe różnice na systemach 32-bitowych (możliwe daty mogą skończyć się na 
    19.01.2038 03:14:07).
   </para>
  </note>
  <note>
   <para>
    Poprawny zakres znacznika czasu to zazwyczaj od 13.12.1901
    20:45:54 UTC do 19.01.2038 03:14:07 UTC. (Są to daty
    odpowiadające minimalnej i maksymalnej wartości dla 32-bitowej liczby
    całkowitej ze znakiem).
   </para>
   <para>
    W 64-bitowych wersjach PHP, poprawny zakres znaczników czasu jest niemalże
    nieskończony, gdyż 64 bity mogą przedstawiać około 293 miliardy lat w obu
    kierunkach.
   </para>
  </note>
  <note>
   <para>
    Użycie tej funkcji dla operacji matematycznych jest niezalecane.
    Lepiej użyć <methodname>DateTime::add</methodname> oraz
    <methodname>DateTime::sub</methodname>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><classname>DateTimeImmutable</classname></member>
    <member><methodname>DateTimeImmutable::createFromFormat</methodname></member>
    <member><link linkend="datetime.formats">Formaty daty i czasu</link></member>
    <member><function>checkdate</function></member>
    <member><function>strptime</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
